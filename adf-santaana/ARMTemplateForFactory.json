{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-santaana"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kvsantaana.vault.azure.net/"
		},
		"datalake_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "@linkedService().storage_secret"
		},
		"sqlLaptop_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sqlonprem-conn-string"
		},
		"sqlMetadata_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "metadata-conn-string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetRawFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT [id]\n      ,[dataSourceName]\n      ,[processGroup]\n      ,[processGroupOrder]\n      ,[dataSourceType]\n      ,[fileExtension]\n      ,[secretConnectionString]\n      ,[secretDataLakeConnString]\n      ,[srcDatalakeContainerName]\n      ,[srcDataLakePath]\n      ,[onPremFileSystemPath]\n      ,[onPremFileSystemName]\n      ,[databaseName]\n      ,[sqlSchema]\n      ,[sqlTable]\n      ,[srcKeyColumns]\n      ,[dstRawContainer]\n      ,[dstRawPath]\n      ,[dstRefinedContainer]\n      ,[dstRefinedPath]\n      ,[SrcToRawDatabricksNotebook]\n      ,[RawtoRefinedDatabricksNotebook]\n      ,[IsEnabled]\n      ,[status]\n      ,[rawSourceQuery]\n      ,[refinedSourceQuery]\n      ,[isSnapshot]\n      ,[isWatermark]\n      ,[watermarkValue]\n      ,[isChangeTracking]\n      ,[lastChangeTrackingValue]\n\t  ,CASE \n\t\tWHEN isSnapshot = '1' THEN 'snapshot'\n\t\tWHEN isWatermark = '1' THEN 'watermark'\n\t\tWHEN isChangeTracking = '1' THEN 'changetracking'\n\t   END AS typeOfPull\n  FROM [dbo].[metaSourceToRefined]\n  WHERE IsEnabled='1'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "sqldb",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().sqlSchema",
													"type": "Expression"
												},
												"table": {
													"value": "@item().sqlTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText1",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@item().dstRawContainer",
													"type": "Expression"
												},
												"directory": {
													"value": "@concat(item().dstRawPath,'/',variables('rawFolder'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().sqlTable",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "TypeOfPull",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().typeOfPull",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "snapshot",
												"activities": [
													{
														"name": "SourceToRaw_CT",
														"type": "Copy",
														"state": "Inactive",
														"onInactiveMarkAs": "Succeeded",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "SqlServerSource",
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobStorageWriteSettings"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "sqldb",
																"type": "DatasetReference",
																"parameters": {
																	"schema": {
																		"value": "@item().sqlSchema",
																		"type": "Expression"
																	},
																	"table": {
																		"value": "@item().sqlTable",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "DelimitedText1",
																"type": "DatasetReference",
																"parameters": {
																	"container": {
																		"value": "@item().dstRawContainer",
																		"type": "Expression"
																	},
																	"directory": {
																		"value": "@concat(item().dstRawPath,'/',variables('rawFolder'))",
																		"type": "Expression"
																	},
																	"filename": {
																		"value": "@item().sqlTable",
																		"type": "Expression"
																	},
																	"storage_secret": {
																		"value": "@item().secretDataLakeConnString",
																		"type": "Expression"
																	}
																}
															}
														]
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "GetYear",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "year",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),0,4)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetMonth",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "month",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),5,2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetDay",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "day",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),8,2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetHour",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "hour",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),11,2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetRawFolder",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetMonth",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetDay",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetHour",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetMinute",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "rawFolder",
							"value": {
								"value": "@concat(variables('year'),'/',variables('month'),'/',variables('day'),'/',variables('hour'),'/',variables('hour'),'/',variables('minute'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetMinute",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "minute",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),14,2)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"processGroup": {
						"type": "string"
					}
				},
				"variables": {
					"year": {
						"type": "String"
					},
					"month": {
						"type": "String"
					},
					"day": {
						"type": "String"
					},
					"hour": {
						"type": "String"
					},
					"rawFolder": {
						"type": "String"
					},
					"minute": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-29T20:44:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/sqldb')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/plParent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetYear",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Write Audit - Parent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "year",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),0,4)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetMonth",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Write Audit - Parent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "month",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),5,2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetDay",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Write Audit - Parent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "day",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),8,2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetHour",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Write Audit - Parent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "hour",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),11,2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetRawFolder",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetMonth",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetDay",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetHour",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetMinute",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "rawFolder",
							"value": {
								"value": "@concat(variables('year'),'/',variables('month'),'/',variables('day'),'/',variables('hour'),'/',variables('hour'),'/',variables('minute'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetMinute",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Write Audit - Parent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "minute",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),14,2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "plRaw_Snapshot",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SetRawFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "plRaw_Snapshot",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"rawFolder": {
									"value": "@variables('rawFolder')",
									"type": "Expression"
								},
								"processGroup": {
									"value": "@pipeline().parameters.processGroup",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "plRaw_ChangeTracking",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SetRawFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "plRaw_ChangeTracking",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"rawFolder": {
									"value": "@variables('rawFolder')",
									"type": "Expression"
								},
								"processGroup": {
									"value": "@pipeline().parameters.processGroup",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Write Audit - Parent",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[uspWritePipelineAudit]",
							"storedProcedureParameters": {
								"auditOperation": {
									"value": "I",
									"type": "String"
								},
								"pipelineChildName": {
									"value": null,
									"type": "String"
								},
								"pipelineChildRunID": {
									"value": null,
									"type": "String"
								},
								"pipelineEnd": {
									"value": null,
									"type": "DateTime"
								},
								"pipelineErrorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineParentName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineParentRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineProcessGroup": {
									"value": {
										"value": "@pipeline().parameters.processGroup",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRawContainer": {
									"value": null,
									"type": "String"
								},
								"pipelineRawFolder": {
									"value": null,
									"type": "String"
								},
								"pipelineStart": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineStatus": {
									"value": "A",
									"type": "String"
								},
								"pipelineType": {
									"value": "P",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqlMetadata",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "dummydate",
							"value": {
								"value": "@formatDateTime('1900-01-01 00:00:00.000', 'yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Write Audit - Parent_copy1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "plRaw_Snapshot",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "plRaw_ChangeTracking",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[uspWritePipelineAudit]",
							"storedProcedureParameters": {
								"auditOperation": {
									"value": "U",
									"type": "String"
								},
								"pipelineChildName": {
									"value": null,
									"type": "String"
								},
								"pipelineChildRunID": {
									"value": null,
									"type": "String"
								},
								"pipelineEnd": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineErrorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineParentName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineParentRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineProcessGroup": {
									"value": {
										"value": "@pipeline().parameters.processGroup",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRawContainer": {
									"value": null,
									"type": "String"
								},
								"pipelineRawFolder": {
									"value": null,
									"type": "String"
								},
								"pipelineStart": {
									"value": null,
									"type": "DateTime"
								},
								"pipelineStatus": {
									"value": "C",
									"type": "String"
								},
								"pipelineType": {
									"value": "P",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqlMetadata",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"processGroup": {
						"type": "string",
						"defaultValue": "test"
					}
				},
				"variables": {
					"year": {
						"type": "String"
					},
					"month": {
						"type": "String"
					},
					"day": {
						"type": "String"
					},
					"hour": {
						"type": "String"
					},
					"rawFolder": {
						"type": "String"
					},
					"minute": {
						"type": "String"
					},
					"test": {
						"type": "String"
					},
					"ct": {
						"type": "String"
					},
					"schema": {
						"type": "String"
					},
					"tbl": {
						"type": "String"
					},
					"dummydate": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-29T20:44:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/plRaw_Snapshot')]",
				"[concat(variables('factoryId'), '/pipelines/plRaw_ChangeTracking')]",
				"[concat(variables('factoryId'), '/linkedServices/sqlMetadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/plParent_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetYear",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Write Audit - Parent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "year",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),0,4)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetMonth",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Write Audit - Parent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "month",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),5,2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetDay",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Write Audit - Parent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "day",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),8,2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetHour",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Write Audit - Parent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "hour",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),11,2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetRawFolder",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetMonth",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetDay",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetHour",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetMinute",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "rawFolder",
							"value": {
								"value": "@concat(variables('year'),'/',variables('month'),'/',variables('day'),'/',variables('hour'),'/',variables('hour'),'/',variables('minute'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetMinute",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Write Audit - Parent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "minute",
							"value": {
								"value": "@substring(convertFromUtc(utcnow(),'Mountain Standard Time'),14,2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "plRaw_Snapshot",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SetRawFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "plRaw_Snapshot",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"rawFolder": {
									"value": "@variables('rawFolder')",
									"type": "Expression"
								},
								"processGroup": {
									"value": "@pipeline().parameters.processGroup",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "plRaw_ChangeTracking",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SetRawFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "plRaw_ChangeTracking",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"rawFolder": {
									"value": "@variables('rawFolder')",
									"type": "Expression"
								},
								"processGroup": {
									"value": "@pipeline().parameters.processGroup",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Write Audit - Parent",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[uspWritePipelineAudit]",
							"storedProcedureParameters": {
								"auditOperation": {
									"value": "I",
									"type": "String"
								},
								"pipelineChildEnd": {
									"value": {
										"value": "@formatDateTime(variables('dummydate'),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineChildName": {
									"value": null,
									"type": "String"
								},
								"pipelineChildRunID": {
									"value": null,
									"type": "String"
								},
								"pipelineChildStart": {
									"value": {
										"value": "@formatDateTime(variables('dummydate'),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineChildStatus": {
									"value": "",
									"type": "String"
								},
								"pipelineErrorMessage": {
									"value": "",
									"type": "String"
								},
								"pipelineParentEnd": {
									"value": {
										"value": "@formatDateTime(variables('dummydate'),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineParentName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineParentRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineParentStart": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineParentStatus": {
									"value": "A",
									"type": "String"
								},
								"pipelineProcessGroup": {
									"value": {
										"value": "@pipeline().parameters.processGroup",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRawContainer": {
									"value": "",
									"type": "String"
								},
								"pipelineRawFolder": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqlMetadata",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "dummydate",
							"value": {
								"value": "@formatDateTime('1900-01-01 00:00:00.000', 'yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Write Audit - Parent_copy1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "plRaw_Snapshot",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "plRaw_ChangeTracking",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[uspWritePipelineAudit]",
							"storedProcedureParameters": {
								"auditOperation": {
									"value": "U",
									"type": "String"
								},
								"pipelineChildEnd": {
									"value": null,
									"type": "DateTime"
								},
								"pipelineChildName": {
									"value": null,
									"type": "String"
								},
								"pipelineChildRunID": {
									"value": null,
									"type": "String"
								},
								"pipelineChildStart": {
									"value": null,
									"type": "DateTime"
								},
								"pipelineChildStatus": {
									"value": null,
									"type": "String"
								},
								"pipelineErrorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineParentEnd": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineParentName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineParentRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineParentStart": {
									"value": null,
									"type": "DateTime"
								},
								"pipelineParentStatus": {
									"value": "C",
									"type": "String"
								},
								"pipelineProcessGroup": {
									"value": {
										"value": "@pipeline().parameters.processGroup",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRawContainer": {
									"value": null,
									"type": "String"
								},
								"pipelineRawFolder": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqlMetadata",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"processGroup": {
						"type": "string",
						"defaultValue": "test"
					}
				},
				"variables": {
					"year": {
						"type": "String"
					},
					"month": {
						"type": "String"
					},
					"day": {
						"type": "String"
					},
					"hour": {
						"type": "String"
					},
					"rawFolder": {
						"type": "String"
					},
					"minute": {
						"type": "String"
					},
					"test": {
						"type": "String"
					},
					"ct": {
						"type": "String"
					},
					"schema": {
						"type": "String"
					},
					"tbl": {
						"type": "String"
					},
					"dummydate": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-29T20:44:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/plRaw_Snapshot')]",
				"[concat(variables('factoryId'), '/pipelines/plRaw_ChangeTracking')]",
				"[concat(variables('factoryId'), '/linkedServices/sqlMetadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/plRaw_ChangeTracking')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lkp_CT",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT [id]\n      ,[dataSourceName]\n      ,[processGroup]\n      ,[processGroupOrder]\n      ,[dataSourceType]\n      ,[fileExtension]\n      ,[secretConnectionString]\n      ,[secretDataLakeConnString]\n      ,[srcDatalakeContainerName]\n      ,[srcDataLakePath]\n      ,[onPremFileSystemPath]\n      ,[onPremFileSystemName]\n      ,[databaseName]\n      ,[sqlSchema]\n      ,[sqlTable]\n      ,[srcKeyColumns]\n      ,[dstRawContainer]\n      ,[dstRawPath]\n      ,[dstRefinedContainer]\n      ,[dstRefinedPath]\n      ,[SrcToRawDatabricksNotebook]\n      ,[RawtoRefinedDatabricksNotebook]\n      ,[IsEnabled]\n      ,[status]\n      ,[rawSourceQuery]\n      ,[refinedSourceQuery]\n      ,[isSnapshot]\n      ,[isWatermark]\n      ,[watermarkValue]\n      ,[isChangeTracking]\n      ,isnull([lastChangeTrackingValue],0) as lastChangeTrackingValue\n  FROM [dbo].[metaSourceToRefined]\n  WHERE IsEnabled='1' and isChangeTracking = '1'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Inc",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lkp_CT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lkp_CT').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "lkp_GetLastCV",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "sp_WriteAudit_CT",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderStoredProcedureName": "[[dbo].[uspGetLastCV]",
											"storedProcedureParameters": {
												"schema": {
													"type": "String",
													"value": {
														"value": "@item().sqlSchema",
														"type": "Expression"
													}
												},
												"startCV": {
													"type": "Int64",
													"value": {
														"value": "@item().lastChangeTrackingValue",
														"type": "Expression"
													}
												},
												"tbl": {
													"type": "String",
													"value": {
														"value": "@item().sqlTable",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "sqldb",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().sqlSchema",
													"type": "Expression"
												},
												"table": {
													"value": "@item().sqlTable",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "If LastCV NOT 0",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "lkp_GetLastCV",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(equals(coalesce(activity('lkp_GetLastCV').output.firstRow.lastCV,0),0))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy Incremental CT Data",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "WriteDataLakeAudit",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderStoredProcedureName": "[[dbo].[uspGetChangedData]",
														"storedProcedureParameters": {
															"endCT": {
																"type": "Int64",
																"value": {
																	"value": "@activity('lkp_GetLastCV').output.firstRow.lastCV",
																	"type": "Expression"
																}
															},
															"schema": {
																"type": "String",
																"value": {
																	"value": "@item().sqlSchema",
																	"type": "Expression"
																}
															},
															"startCT": {
																"type": "Int64",
																"value": {
																	"value": "@item().lastChangeTrackingValue",
																	"type": "Expression"
																}
															},
															"table": {
																"type": "String",
																"value": {
																	"value": "@item().sqlTable",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "sqldb",
														"type": "DatasetReference",
														"parameters": {
															"schema": {
																"value": "@item().sqlSchema",
																"type": "Expression"
															},
															"table": {
																"value": "@item().sqlTable",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText1",
														"type": "DatasetReference",
														"parameters": {
															"container": {
																"value": "@item().dstRawContainer",
																"type": "Expression"
															},
															"directory": {
																"value": "@concat(item().dstRawPath,'/',pipeline().parameters.rawFolder)",
																"type": "Expression"
															},
															"filename": {
																"value": "@item().sqlTable",
																"type": "Expression"
															},
															"storage_secret": {
																"value": "@item().secretDataLakeConnString",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "uspUpdateLastChangeTrackingValue",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "UpdateDataLakeAudit",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[uspUpdateLastChangeTrackingValue]",
													"storedProcedureParameters": {
														"id": {
															"value": {
																"value": "@item().id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"lastChangeTrackingValue": {
															"value": {
																"value": "@activity('lkp_GetLastCV').output.firstRow.lastCV",
																"type": "Expression"
															},
															"type": "Int64"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "sqlMetadata",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Data Read",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Copy Incremental CT Data",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "tableDataRead",
													"value": {
														"value": "@string(activity('Copy Incremental CT Data').output.dataRead)",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Data Written",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Data Read",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "tableDataWritten",
													"value": {
														"value": "@string(activity('Copy Incremental CT Data').output.dataWritten)",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Rows Read",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Data Written",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "tableRowsRead",
													"value": {
														"value": "@string(activity('Copy Incremental CT Data').output.rowsRead)",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Rows Copied",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Rows Read",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "tableRowsCopied",
													"value": {
														"value": "@string(activity('Copy Incremental CT Data').output.rowsCopied)",
														"type": "Expression"
													}
												}
											},
											{
												"name": "WriteDataLakeAudit",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[uspWriteDataLakeAudit]",
													"storedProcedureParameters": {
														"auditOperation": {
															"value": "I",
															"type": "String"
														},
														"pipelineChildName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"pipelineChildRunID": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"pipelineParentName": {
															"value": {
																"value": "@pipeline()?.TriggeredByPipelineName",
																"type": "Expression"
															},
															"type": "String"
														},
														"pipelineParentRunID": {
															"value": {
																"value": "@pipeline()?.TriggeredByPipelineRunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"pipelineProcessGroup": {
															"value": {
																"value": "@pipeline().parameters.processGroup",
																"type": "Expression"
															},
															"type": "String"
														},
														"tableContainer": {
															"value": {
																"value": "@item().dstRawContainer",
																"type": "Expression"
															},
															"type": "String"
														},
														"tableCTBegin": {
															"value": {
																"value": "@item().lastChangeTrackingValue",
																"type": "Expression"
															},
															"type": "Int64"
														},
														"tableCTEnd": {
															"value": {
																"value": "@activity('lkp_GetLastCV').output.firstRow.lastCV",
																"type": "Expression"
															},
															"type": "Int64"
														},
														"tableDataRead": {
															"value": null,
															"type": "Int64"
														},
														"tableDataWritten": {
															"value": null,
															"type": "Int64"
														},
														"tableEnd": {
															"value": null,
															"type": "DateTime"
														},
														"tableName": {
															"value": {
																"value": "@item().sqlTable",
																"type": "Expression"
															},
															"type": "String"
														},
														"tableRawFolder": {
															"value": {
																"value": "@pipeline().parameters.rawFolder",
																"type": "Expression"
															},
															"type": "String"
														},
														"tableRowsCopied": {
															"value": null,
															"type": "Int64"
														},
														"tableRowsRead": {
															"value": null,
															"type": "Int64"
														},
														"tableStart": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"tableStatus": {
															"value": "A",
															"type": "String"
														},
														"tableWatermarkBegin": {
															"value": null,
															"type": "DateTime"
														},
														"tableWatermarkEnd": {
															"value": null,
															"type": "DateTime"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "sqlMetadata",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateDataLakeAudit",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Rows Copied",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[uspWriteDataLakeAudit]",
													"storedProcedureParameters": {
														"auditOperation": {
															"value": "U",
															"type": "String"
														},
														"pipelineChildName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"pipelineChildRunID": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"pipelineParentName": {
															"value": {
																"value": "@pipeline()?.TriggeredByPipelineName",
																"type": "Expression"
															},
															"type": "String"
														},
														"pipelineParentRunID": {
															"value": {
																"value": "@pipeline()?.TriggeredByPipelineRunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"pipelineProcessGroup": {
															"value": {
																"value": "@pipeline().parameters.processGroup",
																"type": "Expression"
															},
															"type": "String"
														},
														"tableContainer": {
															"value": {
																"value": "@item().dstRawContainer",
																"type": "Expression"
															},
															"type": "String"
														},
														"tableCTBegin": {
															"value": {
																"value": "@item().lastChangeTrackingValue",
																"type": "Expression"
															},
															"type": "Int64"
														},
														"tableCTEnd": {
															"value": {
																"value": "@activity('lkp_GetLastCV').output.firstRow.lastCV",
																"type": "Expression"
															},
															"type": "Int64"
														},
														"tableDataRead": {
															"value": {
																"value": "@activity('Copy Incremental CT Data').output.dataRead",
																"type": "Expression"
															},
															"type": "Int64"
														},
														"tableDataWritten": {
															"value": {
																"value": "@activity('Copy Incremental CT Data').output.dataWritten",
																"type": "Expression"
															},
															"type": "Int64"
														},
														"tableEnd": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"tableName": {
															"value": {
																"value": "@item().sqlTable",
																"type": "Expression"
															},
															"type": "String"
														},
														"tableRawFolder": {
															"value": {
																"value": "@pipeline().parameters.rawFolder",
																"type": "Expression"
															},
															"type": "String"
														},
														"tableRowsCopied": {
															"value": {
																"value": "@activity('Copy Incremental CT Data').output.rowsRead",
																"type": "Expression"
															},
															"type": "Int64"
														},
														"tableRowsRead": {
															"value": {
																"value": "@activity('Copy Incremental CT Data').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int64"
														},
														"tableStart": {
															"value": null,
															"type": "DateTime"
														},
														"tableStatus": {
															"value": "C",
															"type": "String"
														},
														"tableWatermarkBegin": {
															"value": null,
															"type": "DateTime"
														},
														"tableWatermarkEnd": {
															"value": null,
															"type": "DateTime"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "sqlMetadata",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "sp_WriteAudit_CT",
									"type": "SqlServerStoredProcedure",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[uspWritePipelineAudit]",
										"storedProcedureParameters": {
											"auditOperation": {
												"value": "I",
												"type": "String"
											},
											"pipelineChildEnd": {
												"value": null,
												"type": "DateTime"
											},
											"pipelineChildName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineChildRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineChildStart": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"pipelineChildStatus": {
												"value": "A",
												"type": "String"
											},
											"pipelineErrorMessage": {
												"value": null,
												"type": "String"
											},
											"pipelineParentEnd": {
												"value": null,
												"type": "DateTime"
											},
											"pipelineParentName": {
												"value": {
													"value": "@pipeline()?.TriggeredByPipelineName",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineParentRunID": {
												"value": {
													"value": "@pipeline()?.TriggeredByPipelineRunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineParentStart": {
												"value": "",
												"type": "DateTime"
											},
											"pipelineParentStatus": {
												"value": "",
												"type": "String"
											},
											"pipelineProcessGroup": {
												"value": "",
												"type": "String"
											},
											"pipelineRawContainer": {
												"value": "",
												"type": "String"
											},
											"pipelineRawFolder": {
												"value": "",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "sqlMetadata",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[uspWritePipelineAudit]",
							"storedProcedureParameters": {
								"auditOperation": {
									"value": "I",
									"type": "String"
								},
								"pipelineChildName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineChildRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineEnd": {
									"value": null,
									"type": "DateTime"
								},
								"pipelineErrorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineParentName": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineParentRunID": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineProcessGroup": {
									"value": {
										"value": "@pipeline().parameters.processGroup",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRawContainer": {
									"value": "",
									"type": "String"
								},
								"pipelineRawFolder": {
									"value": {
										"value": "@pipeline().parameters.rawFolder",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineStart": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineStatus": {
									"value": "A",
									"type": "String"
								},
								"pipelineType": {
									"value": "C",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqlMetadata",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Stored procedure1_copy1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "For Each Inc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[uspWritePipelineAudit]",
							"storedProcedureParameters": {
								"auditOperation": {
									"value": "U",
									"type": "String"
								},
								"pipelineChildName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineChildRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineEnd": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineErrorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineParentName": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineParentRunID": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineProcessGroup": {
									"value": {
										"value": "@pipeline().parameters.processGroup",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRawContainer": {
									"value": null,
									"type": "String"
								},
								"pipelineRawFolder": {
									"value": {
										"value": "@pipeline().parameters.rawFolder",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineStart": {
									"value": null,
									"type": "DateTime"
								},
								"pipelineStatus": {
									"value": "C",
									"type": "String"
								},
								"pipelineType": {
									"value": "C",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqlMetadata",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"rawFolder": {
						"type": "string"
					},
					"processGroup": {
						"type": "string"
					}
				},
				"variables": {
					"lastCV": {
						"type": "String"
					},
					"ct": {
						"type": "String"
					},
					"schema": {
						"type": "String"
					},
					"tbl": {
						"type": "String"
					},
					"dummydate": {
						"type": "String"
					},
					"tableDataRead": {
						"type": "String"
					},
					"tableDataWritten": {
						"type": "String"
					},
					"tableRowsRead": {
						"type": "String"
					},
					"tableRowsWritten": {
						"type": "String"
					},
					"tableRowsCopied": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-29T20:44:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/sqlMetadata')]",
				"[concat(variables('factoryId'), '/datasets/sqldb')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/plRaw_ChangeTracking_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lkp_CT",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT [id]\n      ,[dataSourceName]\n      ,[processGroup]\n      ,[processGroupOrder]\n      ,[dataSourceType]\n      ,[fileExtension]\n      ,[secretConnectionString]\n      ,[secretDataLakeConnString]\n      ,[srcDatalakeContainerName]\n      ,[srcDataLakePath]\n      ,[onPremFileSystemPath]\n      ,[onPremFileSystemName]\n      ,[databaseName]\n      ,[sqlSchema]\n      ,[sqlTable]\n      ,[srcKeyColumns]\n      ,[dstRawContainer]\n      ,[dstRawPath]\n      ,[dstRefinedContainer]\n      ,[dstRefinedPath]\n      ,[SrcToRawDatabricksNotebook]\n      ,[RawtoRefinedDatabricksNotebook]\n      ,[IsEnabled]\n      ,[status]\n      ,[rawSourceQuery]\n      ,[refinedSourceQuery]\n      ,[isSnapshot]\n      ,[isWatermark]\n      ,[watermarkValue]\n      ,[isChangeTracking]\n      ,isnull([lastChangeTrackingValue],0) as lastChangeTrackingValue\n  FROM [dbo].[metaSourceToRefined]\n  WHERE IsEnabled='1' and isChangeTracking = '1'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Inc",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lkp_CT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lkp_CT').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "lkp_GetLastCV",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "sp_WriteAudit_CT",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderStoredProcedureName": "[[dbo].[uspGetLastCV]",
											"storedProcedureParameters": {
												"schema": {
													"type": "String",
													"value": {
														"value": "@item().sqlSchema",
														"type": "Expression"
													}
												},
												"startCV": {
													"type": "Int64",
													"value": {
														"value": "@item().lastChangeTrackingValue",
														"type": "Expression"
													}
												},
												"tbl": {
													"type": "String",
													"value": {
														"value": "@item().sqlTable",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "sqldb",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().sqlSchema",
													"type": "Expression"
												},
												"table": {
													"value": "@item().sqlTable",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "If LastCV NOT 0",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "lkp_GetLastCV",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(equals(coalesce(activity('lkp_GetLastCV').output.firstRow.lastCV,0),0))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy Incremental CT Data",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderStoredProcedureName": "[[dbo].[uspGetChangedData]",
														"storedProcedureParameters": {
															"endCT": {
																"type": "Int64",
																"value": {
																	"value": "@activity('lkp_GetLastCV').output.firstRow.lastCV",
																	"type": "Expression"
																}
															},
															"schema": {
																"type": "String",
																"value": {
																	"value": "@item().sqlSchema",
																	"type": "Expression"
																}
															},
															"startCT": {
																"type": "Int64",
																"value": {
																	"value": "@item().lastChangeTrackingValue",
																	"type": "Expression"
																}
															},
															"table": {
																"type": "String",
																"value": {
																	"value": "@item().sqlTable",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "sqldb",
														"type": "DatasetReference",
														"parameters": {
															"schema": {
																"value": "@item().sqlSchema",
																"type": "Expression"
															},
															"table": {
																"value": "@item().sqlTable",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText1",
														"type": "DatasetReference",
														"parameters": {
															"container": {
																"value": "@item().dstRawContainer",
																"type": "Expression"
															},
															"directory": {
																"value": "@concat(item().dstRawPath,'/',pipeline().parameters.rawFolder)",
																"type": "Expression"
															},
															"filename": {
																"value": "@item().sqlTable",
																"type": "Expression"
															},
															"storage_secret": {
																"value": "@item().secretDataLakeConnString",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "uspUpdateLastChangeTrackingValue",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy Incremental CT Data",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[uspUpdateLastChangeTrackingValue]",
													"storedProcedureParameters": {
														"id": {
															"value": {
																"value": "@item().id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"lastChangeTrackingValue": {
															"value": {
																"value": "@activity('lkp_GetLastCV').output.firstRow.lastCV",
																"type": "Expression"
															},
															"type": "Int64"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "sqlMetadata",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "sp_WriteAudit_CT",
									"type": "SqlServerStoredProcedure",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[uspWritePipelineAudit]",
										"storedProcedureParameters": {
											"auditOperation": {
												"value": "I",
												"type": "String"
											},
											"pipelineChildEnd": {
												"value": null,
												"type": "DateTime"
											},
											"pipelineChildName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineChildRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineChildStart": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"pipelineChildStatus": {
												"value": "A",
												"type": "String"
											},
											"pipelineErrorMessage": {
												"value": null,
												"type": "String"
											},
											"pipelineParentEnd": {
												"value": null,
												"type": "DateTime"
											},
											"pipelineParentName": {
												"value": {
													"value": "@pipeline()?.TriggeredByPipelineName",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineParentRunID": {
												"value": {
													"value": "@pipeline()?.TriggeredByPipelineRunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineParentStart": {
												"value": "",
												"type": "DateTime"
											},
											"pipelineParentStatus": {
												"value": "",
												"type": "String"
											},
											"pipelineProcessGroup": {
												"value": "",
												"type": "String"
											},
											"pipelineRawContainer": {
												"value": "",
												"type": "String"
											},
											"pipelineRawFolder": {
												"value": "",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "sqlMetadata",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[uspWritePipelineAudit]",
							"storedProcedureParameters": {
								"auditOperation": {
									"value": "I",
									"type": "String"
								},
								"pipelineChildEnd": {
									"value": {
										"value": "@formatDateTime('1900-01-01 00:00:00.000', 'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineChildName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineChildRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineChildStart": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineChildStatus": {
									"value": "A",
									"type": "String"
								},
								"pipelineErrorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineParentEnd": {
									"value": {
										"value": "@formatDateTime('1900-01-01 00:00:00.000', 'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineParentName": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineParentRunID": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineParentStart": {
									"value": {
										"value": "@formatDateTime('1900-01-01 00:00:00.000', 'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineParentStatus": {
									"value": null,
									"type": "String"
								},
								"pipelineProcessGroup": {
									"value": {
										"value": "@pipeline().parameters.processGroup",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRawContainer": {
									"value": null,
									"type": "String"
								},
								"pipelineRawFolder": {
									"value": {
										"value": "@pipeline().parameters.rawFolder",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqlMetadata",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Stored procedure1_copy1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "For Each Inc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[uspWritePipelineAudit]",
							"storedProcedureParameters": {
								"auditOperation": {
									"value": "U",
									"type": "String"
								},
								"pipelineChildEnd": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineChildName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineChildRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineChildStart": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineChildStatus": {
									"value": "C",
									"type": "String"
								},
								"pipelineErrorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineParentEnd": {
									"value": {
										"value": "@formatDateTime('1900-01-01 00:00:00.000', 'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineParentName": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineParentRunID": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineParentStart": {
									"value": {
										"value": "@formatDateTime('1900-01-01 00:00:00.000', 'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineParentStatus": {
									"value": null,
									"type": "String"
								},
								"pipelineProcessGroup": {
									"value": {
										"value": "@pipeline().parameters.processGroup",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRawContainer": {
									"value": null,
									"type": "String"
								},
								"pipelineRawFolder": {
									"value": {
										"value": "@pipeline().parameters.rawFolder",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqlMetadata",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"rawFolder": {
						"type": "string"
					},
					"processGroup": {
						"type": "string"
					}
				},
				"variables": {
					"lastCV": {
						"type": "String"
					},
					"ct": {
						"type": "String"
					},
					"schema": {
						"type": "String"
					},
					"tbl": {
						"type": "String"
					},
					"dummydate": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-29T20:44:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/sqlMetadata')]",
				"[concat(variables('factoryId'), '/datasets/sqldb')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/plRaw_Snapshot')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT [id]\n      ,[dataSourceName]\n      ,[processGroup]\n      ,[processGroupOrder]\n      ,[dataSourceType]\n      ,[fileExtension]\n      ,[secretConnectionString]\n      ,[secretDataLakeConnString]\n      ,[srcDatalakeContainerName]\n      ,[srcDataLakePath]\n      ,[onPremFileSystemPath]\n      ,[onPremFileSystemName]\n      ,[databaseName]\n      ,[sqlSchema]\n      ,[sqlTable]\n      ,[srcKeyColumns]\n      ,[dstRawContainer]\n      ,[dstRawPath]\n      ,[dstRefinedContainer]\n      ,[dstRefinedPath]\n      ,[SrcToRawDatabricksNotebook]\n      ,[RawtoRefinedDatabricksNotebook]\n      ,[IsEnabled]\n      ,[status]\n      ,[rawSourceQuery]\n      ,[refinedSourceQuery]\n      ,[isSnapshot]\n      ,[isWatermark]\n      ,[watermarkValue]\n      ,[isChangeTracking]\n      ,[lastChangeTrackingValue]\n  FROM [dbo].[metaSourceToRefined]\n  WHERE IsEnabled='1' and isSnapshot = '1'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Snapshot",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Snapshot Data",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WriteDataLakeAudit",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "sqldb",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().sqlSchema",
													"type": "Expression"
												},
												"table": {
													"value": "@item().sqlTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText1",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@item().dstRawContainer",
													"type": "Expression"
												},
												"directory": {
													"value": "@concat(item().dstRawPath,'/',pipeline().parameters.rawFolder)",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().sqlTable",
													"type": "Expression"
												},
												"storage_secret": {
													"value": "@item().secretDataLakeConnString",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "WriteDataLakeAudit",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[uspWriteDataLakeAudit]",
										"storedProcedureParameters": {
											"auditOperation": {
												"value": "I",
												"type": "String"
											},
											"pipelineChildName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineChildRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineParentName": {
												"value": {
													"value": "@pipeline()?.TriggeredByPipelineName",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineParentRunID": {
												"value": {
													"value": "@pipeline()?.TriggeredByPipelineRunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineProcessGroup": {
												"value": {
													"value": "@pipeline().parameters.processGroup",
													"type": "Expression"
												},
												"type": "String"
											},
											"tableContainer": {
												"value": {
													"value": "@item().dstRawContainer",
													"type": "Expression"
												},
												"type": "String"
											},
											"tableCTBegin": {
												"value": null,
												"type": "Int64"
											},
											"tableCTEnd": {
												"value": null,
												"type": "Int64"
											},
											"tableDataRead": {
												"value": null,
												"type": "Int64"
											},
											"tableDataWritten": {
												"value": null,
												"type": "Int64"
											},
											"tableEnd": {
												"value": null,
												"type": "DateTime"
											},
											"tableName": {
												"value": {
													"value": "@item().sqlTable",
													"type": "Expression"
												},
												"type": "String"
											},
											"tableRawFolder": {
												"value": {
													"value": "@pipeline().parameters.rawFolder",
													"type": "Expression"
												},
												"type": "String"
											},
											"tableRowsCopied": {
												"value": null,
												"type": "Int64"
											},
											"tableRowsRead": {
												"value": null,
												"type": "Int64"
											},
											"tableStart": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"tableStatus": {
												"value": "A",
												"type": "String"
											},
											"tableWatermarkBegin": {
												"value": null,
												"type": "DateTime"
											},
											"tableWatermarkEnd": {
												"value": null,
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "sqlMetadata",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "UpdateDataLakeAudit",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Snapshot Data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[uspWriteDataLakeAudit]",
										"storedProcedureParameters": {
											"auditOperation": {
												"value": "U",
												"type": "String"
											},
											"pipelineChildName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineChildRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineParentName": {
												"value": {
													"value": "@pipeline()?.TriggeredByPipelineName",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineParentRunID": {
												"value": {
													"value": "@pipeline()?.TriggeredByPipelineRunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineProcessGroup": {
												"value": {
													"value": "@pipeline().parameters.processGroup",
													"type": "Expression"
												},
												"type": "String"
											},
											"tableContainer": {
												"value": {
													"value": "@item().dstRawContainer",
													"type": "Expression"
												},
												"type": "String"
											},
											"tableCTBegin": {
												"value": null,
												"type": "Int64"
											},
											"tableCTEnd": {
												"value": null,
												"type": "Int64"
											},
											"tableDataRead": {
												"value": {
													"value": "@activity('Copy Snapshot Data').output.dataRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"tableDataWritten": {
												"value": {
													"value": "@activity('Copy Snapshot Data').output.dataWritten",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"tableEnd": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"tableName": {
												"value": {
													"value": "@item().sqlTable",
													"type": "Expression"
												},
												"type": "String"
											},
											"tableRawFolder": {
												"value": {
													"value": "@pipeline().parameters.rawFolder",
													"type": "Expression"
												},
												"type": "String"
											},
											"tableRowsCopied": {
												"value": {
													"value": "@activity('Copy Snapshot Data').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"tableRowsRead": {
												"value": {
													"value": "@activity('Copy Snapshot Data').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"tableStart": {
												"value": null,
												"type": "DateTime"
											},
											"tableStatus": {
												"value": "C",
												"type": "String"
											},
											"tableWatermarkBegin": {
												"value": null,
												"type": "DateTime"
											},
											"tableWatermarkEnd": {
												"value": null,
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "sqlMetadata",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[uspWritePipelineAudit]",
							"storedProcedureParameters": {
								"auditOperation": {
									"value": "I",
									"type": "String"
								},
								"pipelineChildName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineChildRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineEnd": {
									"value": null,
									"type": "DateTime"
								},
								"pipelineErrorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineParentName": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineParentRunID": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineProcessGroup": {
									"value": {
										"value": "@pipeline().parameters.processGroup",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRawContainer": {
									"value": "",
									"type": "String"
								},
								"pipelineRawFolder": {
									"value": {
										"value": "@pipeline().parameters.rawFolder",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineStart": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineStatus": {
									"value": "A",
									"type": "String"
								},
								"pipelineType": {
									"value": "C",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqlMetadata",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Stored procedure1_copy1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "For Each Snapshot",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[uspWritePipelineAudit]",
							"storedProcedureParameters": {
								"auditOperation": {
									"value": "U",
									"type": "String"
								},
								"pipelineChildName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineChildRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineEnd": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineErrorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineParentName": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineParentRunID": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineProcessGroup": {
									"value": {
										"value": "@pipeline().parameters.processGroup",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRawContainer": {
									"value": null,
									"type": "String"
								},
								"pipelineRawFolder": {
									"value": {
										"value": "@pipeline().parameters.rawFolder",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineStart": {
									"value": null,
									"type": "DateTime"
								},
								"pipelineStatus": {
									"value": "C",
									"type": "String"
								},
								"pipelineType": {
									"value": "C",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqlMetadata",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"rawFolder": {
						"type": "string"
					},
					"processGroup": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-29T20:44:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/sqlMetadata')]",
				"[concat(variables('factoryId'), '/datasets/sqldb')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pldummy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference",
					"parameters": {
						"storage_secret": {
							"value": "@dataset().storage_secret",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					},
					"storage_secret": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlMetadata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dataSourceName",
						"type": "varchar"
					},
					{
						"name": "processGroup",
						"type": "varchar"
					},
					{
						"name": "processGroupOrder",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dataSourceType",
						"type": "varchar"
					},
					{
						"name": "fileExtension",
						"type": "varchar"
					},
					{
						"name": "secretConnectionString",
						"type": "varchar"
					},
					{
						"name": "dataLakeNameOrUrl",
						"type": "varchar"
					},
					{
						"name": "srcDatalakeContainerName",
						"type": "varchar"
					},
					{
						"name": "srcDataLakePath",
						"type": "varchar"
					},
					{
						"name": "onPremFileSystemPath",
						"type": "varchar"
					},
					{
						"name": "onPremFileSystemName",
						"type": "varchar"
					},
					{
						"name": "databaseName",
						"type": "varchar"
					},
					{
						"name": "sqlSchema",
						"type": "varchar"
					},
					{
						"name": "sqlTable",
						"type": "varchar"
					},
					{
						"name": "srcKeyColumns",
						"type": "varchar"
					},
					{
						"name": "dstRawContainer",
						"type": "varchar"
					},
					{
						"name": "dstRawPath",
						"type": "varchar"
					},
					{
						"name": "dstRefinedContainer",
						"type": "varchar"
					},
					{
						"name": "dstRefinedPath",
						"type": "varchar"
					},
					{
						"name": "SrcToRawDatabricksNotebook",
						"type": "varchar"
					},
					{
						"name": "RawtoRefinedDatabricksNotebook",
						"type": "varchar"
					},
					{
						"name": "IsEnabled",
						"type": "bit"
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "rawSourceQuery",
						"type": "varchar"
					},
					{
						"name": "refinedSourceQuery",
						"type": "varchar"
					},
					{
						"name": "isSnapshot",
						"type": "bit"
					},
					{
						"name": "isWatermark",
						"type": "bit"
					},
					{
						"name": "watermarkValue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "isChangeTracking",
						"type": "bit"
					},
					{
						"name": "lastChangeTrackingValue",
						"type": "bigint",
						"precision": 19
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "metaSourceToRefined"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sqlMetadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqldb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlLaptop",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sqlLaptop')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"storage_secret": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "[parameters('datalake_properties_typeProperties_connectionString_secretName')]",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlLaptop')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('sqlLaptop_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "selfhost",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/selfhost')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlMetadata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('sqlMetadata_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pldummy",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 15,
						"startTime": "2023-09-05T12:29:00",
						"timeZone": "Eastern Standard Time",
						"schedule": {
							"monthDays": [
								5
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pldummy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/selfhost')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}